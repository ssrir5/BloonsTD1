--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="MAX 10" LPM_SIZE=10 LPM_WIDTH=5 LPM_WIDTHS=4 data result sel
--VERSION_BEGIN 18.1 cbx_lpm_mux 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 35 
SUBDESIGN mux_83b
( 
	data[49..0]	:	input;
	result[4..0]	:	output;
	sel[3..0]	:	input;
) 
VARIABLE 
	muxlut_data0w[9..0]	: WIRE;
	muxlut_data1w[9..0]	: WIRE;
	muxlut_data2w[9..0]	: WIRE;
	muxlut_data3w[9..0]	: WIRE;
	muxlut_data4w[9..0]	: WIRE;
	muxlut_result0w	: WIRE;
	muxlut_result1w	: WIRE;
	muxlut_result2w	: WIRE;
	muxlut_result3w	: WIRE;
	muxlut_result4w	: WIRE;
	muxlut_select0w[3..0]	: WIRE;
	muxlut_select1w[3..0]	: WIRE;
	muxlut_select2w[3..0]	: WIRE;
	muxlut_select3w[3..0]	: WIRE;
	muxlut_select4w[3..0]	: WIRE;
	result_node[4..0]	: WIRE;
	sel_ffs_wire[3..0]	: WIRE;
	sel_node[3..0]	: WIRE;
	w261w[3..0]	: WIRE;
	w263w[1..0]	: WIRE;
	w286w[3..0]	: WIRE;
	w288w[1..0]	: WIRE;
	w309w[1..0]	: WIRE;
	w311w[0..0]	: WIRE;
	w322w[1..0]	: WIRE;
	w361w[3..0]	: WIRE;
	w363w[1..0]	: WIRE;
	w386w[3..0]	: WIRE;
	w388w[1..0]	: WIRE;
	w409w[1..0]	: WIRE;
	w411w[0..0]	: WIRE;
	w422w[1..0]	: WIRE;
	w461w[3..0]	: WIRE;
	w463w[1..0]	: WIRE;
	w486w[3..0]	: WIRE;
	w488w[1..0]	: WIRE;
	w509w[1..0]	: WIRE;
	w511w[0..0]	: WIRE;
	w522w[1..0]	: WIRE;
	w561w[3..0]	: WIRE;
	w563w[1..0]	: WIRE;
	w586w[3..0]	: WIRE;
	w588w[1..0]	: WIRE;
	w609w[1..0]	: WIRE;
	w611w[0..0]	: WIRE;
	w622w[1..0]	: WIRE;
	w661w[3..0]	: WIRE;
	w663w[1..0]	: WIRE;
	w686w[3..0]	: WIRE;
	w688w[1..0]	: WIRE;
	w709w[1..0]	: WIRE;
	w711w[0..0]	: WIRE;
	w722w[1..0]	: WIRE;
	w_mux_outputs259w[2..0]	: WIRE;
	w_mux_outputs359w[2..0]	: WIRE;
	w_mux_outputs459w[2..0]	: WIRE;
	w_mux_outputs559w[2..0]	: WIRE;
	w_mux_outputs659w[2..0]	: WIRE;

BEGIN 
	muxlut_data0w[] = ( data[45..45], data[40..40], data[35..35], data[30..30], data[25..25], data[20..20], data[15..15], data[10..10], data[5..5], data[0..0]);
	muxlut_data1w[] = ( data[46..46], data[41..41], data[36..36], data[31..31], data[26..26], data[21..21], data[16..16], data[11..11], data[6..6], data[1..1]);
	muxlut_data2w[] = ( data[47..47], data[42..42], data[37..37], data[32..32], data[27..27], data[22..22], data[17..17], data[12..12], data[7..7], data[2..2]);
	muxlut_data3w[] = ( data[48..48], data[43..43], data[38..38], data[33..33], data[28..28], data[23..23], data[18..18], data[13..13], data[8..8], data[3..3]);
	muxlut_data4w[] = ( data[49..49], data[44..44], data[39..39], data[34..34], data[29..29], data[24..24], data[19..19], data[14..14], data[9..9], data[4..4]);
	muxlut_result0w = (((! w322w[1..1]) # ((! w322w[0..0]) & w_mux_outputs259w[2..2])) & ((w322w[1..1] # (w322w[0..0] & w_mux_outputs259w[1..1])) # ((! w322w[0..0]) & w_mux_outputs259w[0..0])));
	muxlut_result1w = (((! w422w[1..1]) # ((! w422w[0..0]) & w_mux_outputs359w[2..2])) & ((w422w[1..1] # (w422w[0..0] & w_mux_outputs359w[1..1])) # ((! w422w[0..0]) & w_mux_outputs359w[0..0])));
	muxlut_result2w = (((! w522w[1..1]) # ((! w522w[0..0]) & w_mux_outputs459w[2..2])) & ((w522w[1..1] # (w522w[0..0] & w_mux_outputs459w[1..1])) # ((! w522w[0..0]) & w_mux_outputs459w[0..0])));
	muxlut_result3w = (((! w622w[1..1]) # ((! w622w[0..0]) & w_mux_outputs559w[2..2])) & ((w622w[1..1] # (w622w[0..0] & w_mux_outputs559w[1..1])) # ((! w622w[0..0]) & w_mux_outputs559w[0..0])));
	muxlut_result4w = (((! w722w[1..1]) # ((! w722w[0..0]) & w_mux_outputs659w[2..2])) & ((w722w[1..1] # (w722w[0..0] & w_mux_outputs659w[1..1])) # ((! w722w[0..0]) & w_mux_outputs659w[0..0])));
	muxlut_select0w[] = sel_node[];
	muxlut_select1w[] = sel_node[];
	muxlut_select2w[] = sel_node[];
	muxlut_select3w[] = sel_node[];
	muxlut_select4w[] = sel_node[];
	result[] = result_node[];
	result_node[] = ( muxlut_result4w, muxlut_result3w, muxlut_result2w, muxlut_result1w, muxlut_result0w);
	sel_ffs_wire[] = ( sel[3..0]);
	sel_node[] = ( sel_ffs_wire[3..2], sel[1..0]);
	w261w[3..0] = muxlut_data0w[3..0];
	w263w[1..0] = muxlut_select0w[1..0];
	w286w[3..0] = muxlut_data0w[7..4];
	w288w[1..0] = muxlut_select0w[1..0];
	w309w[1..0] = muxlut_data0w[9..8];
	w311w[0..0] = muxlut_select0w[0..0];
	w322w[1..0] = muxlut_select0w[3..2];
	w361w[3..0] = muxlut_data1w[3..0];
	w363w[1..0] = muxlut_select1w[1..0];
	w386w[3..0] = muxlut_data1w[7..4];
	w388w[1..0] = muxlut_select1w[1..0];
	w409w[1..0] = muxlut_data1w[9..8];
	w411w[0..0] = muxlut_select1w[0..0];
	w422w[1..0] = muxlut_select1w[3..2];
	w461w[3..0] = muxlut_data2w[3..0];
	w463w[1..0] = muxlut_select2w[1..0];
	w486w[3..0] = muxlut_data2w[7..4];
	w488w[1..0] = muxlut_select2w[1..0];
	w509w[1..0] = muxlut_data2w[9..8];
	w511w[0..0] = muxlut_select2w[0..0];
	w522w[1..0] = muxlut_select2w[3..2];
	w561w[3..0] = muxlut_data3w[3..0];
	w563w[1..0] = muxlut_select3w[1..0];
	w586w[3..0] = muxlut_data3w[7..4];
	w588w[1..0] = muxlut_select3w[1..0];
	w609w[1..0] = muxlut_data3w[9..8];
	w611w[0..0] = muxlut_select3w[0..0];
	w622w[1..0] = muxlut_select3w[3..2];
	w661w[3..0] = muxlut_data4w[3..0];
	w663w[1..0] = muxlut_select4w[1..0];
	w686w[3..0] = muxlut_data4w[7..4];
	w688w[1..0] = muxlut_select4w[1..0];
	w709w[1..0] = muxlut_data4w[9..8];
	w711w[0..0] = muxlut_select4w[0..0];
	w722w[1..0] = muxlut_select4w[3..2];
	w_mux_outputs259w[] = ( ((w309w[0..0] & (! w311w[0..0])) # (w309w[1..1] & w311w[0..0])), ((((! w288w[1..1]) # (w288w[0..0] & w286w[3..3])) # ((! w288w[0..0]) & w286w[2..2])) & ((w288w[1..1] # (w288w[0..0] & w286w[1..1])) # ((! w288w[0..0]) & w286w[0..0]))), ((((! w263w[1..1]) # (w263w[0..0] & w261w[3..3])) # ((! w263w[0..0]) & w261w[2..2])) & ((w263w[1..1] # (w263w[0..0] & w261w[1..1])) # ((! w263w[0..0]) & w261w[0..0]))));
	w_mux_outputs359w[] = ( ((w409w[0..0] & (! w411w[0..0])) # (w409w[1..1] & w411w[0..0])), ((((! w388w[1..1]) # (w388w[0..0] & w386w[3..3])) # ((! w388w[0..0]) & w386w[2..2])) & ((w388w[1..1] # (w388w[0..0] & w386w[1..1])) # ((! w388w[0..0]) & w386w[0..0]))), ((((! w363w[1..1]) # (w363w[0..0] & w361w[3..3])) # ((! w363w[0..0]) & w361w[2..2])) & ((w363w[1..1] # (w363w[0..0] & w361w[1..1])) # ((! w363w[0..0]) & w361w[0..0]))));
	w_mux_outputs459w[] = ( ((w509w[0..0] & (! w511w[0..0])) # (w509w[1..1] & w511w[0..0])), ((((! w488w[1..1]) # (w488w[0..0] & w486w[3..3])) # ((! w488w[0..0]) & w486w[2..2])) & ((w488w[1..1] # (w488w[0..0] & w486w[1..1])) # ((! w488w[0..0]) & w486w[0..0]))), ((((! w463w[1..1]) # (w463w[0..0] & w461w[3..3])) # ((! w463w[0..0]) & w461w[2..2])) & ((w463w[1..1] # (w463w[0..0] & w461w[1..1])) # ((! w463w[0..0]) & w461w[0..0]))));
	w_mux_outputs559w[] = ( ((w609w[0..0] & (! w611w[0..0])) # (w609w[1..1] & w611w[0..0])), ((((! w588w[1..1]) # (w588w[0..0] & w586w[3..3])) # ((! w588w[0..0]) & w586w[2..2])) & ((w588w[1..1] # (w588w[0..0] & w586w[1..1])) # ((! w588w[0..0]) & w586w[0..0]))), ((((! w563w[1..1]) # (w563w[0..0] & w561w[3..3])) # ((! w563w[0..0]) & w561w[2..2])) & ((w563w[1..1] # (w563w[0..0] & w561w[1..1])) # ((! w563w[0..0]) & w561w[0..0]))));
	w_mux_outputs659w[] = ( ((w709w[0..0] & (! w711w[0..0])) # (w709w[1..1] & w711w[0..0])), ((((! w688w[1..1]) # (w688w[0..0] & w686w[3..3])) # ((! w688w[0..0]) & w686w[2..2])) & ((w688w[1..1] # (w688w[0..0] & w686w[1..1])) # ((! w688w[0..0]) & w686w[0..0]))), ((((! w663w[1..1]) # (w663w[0..0] & w661w[3..3])) # ((! w663w[0..0]) & w661w[2..2])) & ((w663w[1..1] # (w663w[0..0] & w661w[1..1])) # ((! w663w[0..0]) & w661w[0..0]))));
END;
--VALID FILE
